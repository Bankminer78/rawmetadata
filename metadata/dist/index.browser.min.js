var jsPsychMetadata=function(){"use strict";class u{constructor(){this.authors={}}getList(){const e=[];for(const t of Object.keys(this.authors))e.push(this.authors[t]);return e}setAuthor(e){if(Object.keys(e).length==1){this.authors[e.name]=e.name;return}const t={};t.name=e.name,delete e.name;for(const a in e)e[a]!==void 0&&e[a]!==null&&(t[a]=e[a]);this.authors[t.name]=t}getAuthor(e){return e in this.authors?this.authors[e]:{}}}class d{constructor(){this.generateDefaultVariables()}generateDefaultVariables(){this.variables={};const e={type:"PropertyValue",name:"trial_type",description:{default:"unknown",jsPsych:"The name of the plugin used to run the trial."},value:"string"};this.setVariable(e);const t={type:"PropertyValue",name:"trial_index",description:{default:"unknown",jsPsych:"The index of the current trial across the whole experiment."},value:"numeric"};this.setVariable(t);const a={type:"PropertyValue",name:"time_elapsed",description:{default:"unknown",jsPsych:"The number of milliseconds between the start of the experiment and when the trial ended."},value:"numeric"};this.setVariable(a)}getList(){var e=[];for(const t of Object.keys(this.variables)){const a=this.variables[t],s=a.description,i=Object.keys(s).length;if(i===0)console.error("Empty description");else if(i===1){const r=Object.keys(s)[0];a.description=s[r]}else if(i==2){if(delete s.default,Object.keys(s).length==1){const r=Object.keys(s)[0];a.description=s[r]}}else i>2&&delete s.default;e.push(a)}return e}setVariable(e){const t={};for(const a in e)e[a]!==void 0&&e[a]!==null&&(t[a]=e[a]);this.variables[t.name]=t}getVariable(e){return this.variables[e]||{}}containsVariable(e){return e in this.variables}getVariableNames(){var e=[];for(const t of Object.keys(this.variables))e.push(this.variables[t].name);return e}updateVariable(e,t,a){const s=this.getVariable(e);if(Object.keys(s).length===0){console.error(`Variable "${e}" does not exist.`);return}t==="levels"?this.updateLevels(s,a):t==="minValue"||t==="maxValue"?this.updateMinMax(s,a,t):t==="description"?this.updateDescription(s,a):t==="name"?this.updateName(s,a):s[t]=a}updateLevels(e,t){Array.isArray(e.levels)||(e.levels=[]),e.levels.includes(t)||e.levels.push(t)}updateMinMax(e,t,a){if(!("minValue"in e)||!("maxValue"in e)){e.maxValue=e.minValue=t;return}a==="minValue"&&e.minValue>t?e.minValue=t:a==="maxValue"&&e.maxValue<t&&(e.maxValue=t)}updateDescription(e,t){const a=Object.keys(t)[0],s=Object.values(t)[0];if(a==="undefined"||s==="undefined"){console.error("New value is passed in correct format");return}var i=!1;typeof e.description!="object"&&(e.description={}),Object.entries(e.description).forEach(([r,n])=>{n===s&&(r.includes(a)||(delete e.description[r],e.description[r+", "+a]=s),i=!0)}),i||Object.assign(e.description,t)}updateName(e,t){const a=e.name;e.name=t,delete this.variables[a],this.setVariable(e)}checkDescription(e,t,a){if(t!=="description")return!1;const s=this.getVariable(e);if(Object.keys(s).length===0)return console.error("Variable has not been initalized"),!1;const i=s[t];return typeof i=="undefined"?(console.error("Field has not been defined"),!1):i!==a||typeof i=="object"}deleteVariable(e){e in this.variables?delete this.variables[e]:console.error(`Variable "${e}" does not exist.`)}}var c=(l,e,t)=>new Promise((a,s)=>{var i=o=>{try{n(t.next(o))}catch(h){s(h)}},r=o=>{try{n(t.throw(o))}catch(h){s(h)}},n=o=>o.done?a(o.value):Promise.resolve(o.value).then(i,r);n((t=t.apply(l,e)).next())});class p{constructor(e){this.JsPsych=e,this.generateDefaultMetadata()}generateDefaultMetadata(){this.metadata={},this.setMetadataField("name","title"),this.setMetadataField("schemaVersion","Psych-DS 0.4.0"),this.setMetadataField("@context","https://schema.org"),this.setMetadataField("@type","Dataset"),this.setMetadataField("description","Dataset generated using JsPsych"),this.authors=new u,this.variables=new d,this.cache={}}setMetadataField(e,t){this.metadata[e]=t}getMetadataField(e){return this.metadata[e]}getMetadata(){const e=this.metadata;return e.author=this.authors.getList(),e.variableMeasured=this.variables.getList(),e}setAuthor(e){this.authors.setAuthor(e)}getAuthor(e){return this.authors.getAuthor(e)}setVariable(e){this.variables.setVariable(e)}getVariable(e){return this.variables.getVariable(e)}containsVariable(e){return this.variables.containsVariable(e)}updateVariable(e,t,a){this.variables.updateVariable(e,t,a)}deleteVariable(e){this.variables.deleteVariable(e)}getVariableNames(){return this.variables.getVariableNames()}displayMetadata(e){const t="jspsych-metadata-display",a=JSON.stringify(this.getMetadata(),null,2);e.innerHTML+=`<p id="jspsych-metadata-header">Metadata</p><pre id="${t}" class="jspsych-preformat"></pre>`,document.getElementById(t).textContent+=a}saveAsJsonFile(){const e=JSON.stringify(this.getMetadata(),null,2),t=new Blob([e],{type:"application/json"}),a=URL.createObjectURL(t),s=document.createElement("a");s.href=a,s.download="dataset_description.json",document.body.appendChild(s),s.click(),document.body.removeChild(s),URL.revokeObjectURL(a)}generate(e){return c(this,arguments,function*(t,a={}){typeof t=="string"&&(t=JSON.parse(t));for(const s of t)yield this.generateObservation(s);for(const s in a)this.processMetadata(a,s);console.log(this.cache),this.getMetadata()})}generateObservation(e){return c(this,null,function*(){const t=e.trial_type,a=new Set(["trial_type","trial_index","time_elapsed"]);for(const s in e){const i=e[s];a.has(s)?this.updateFields(s,i,typeof i):this.containsVariable(s)?yield this.generateUpdate(s,i,t):yield this.generateVariable(s,i,t)}})}generateVariable(e,t,a){return c(this,null,function*(){const s=yield this.getPluginInfo(a,e),i=typeof t,r={type:"PropertyValue",name:e,description:s?{[a]:s}:{[a]:"unknown"},value:i};this.setVariable(r),this.updateFields(e,t,i)})}generateUpdate(e,t,a){return c(this,null,function*(){const s=typeof t,i="description",r=yield this.getPluginInfo(a,e),n=r?{[a]:r}:{[a]:"unknown"};this.updateVariable(e,i,n),this.updateFields(e,t,s)})}updateFields(e,t,a){a!=="number"&&a!=="object"&&this.updateVariable(e,"levels",t),a==="number"&&(this.updateVariable(e,"minValue",t),this.updateVariable(e,"maxValue",t))}processMetadata(e,t){const a=e[t];if(t==="variables"){if(typeof a!="object"||a===null){console.error("Variable object is either null or incorrect type");return}for(let s in a){if(!this.containsVariable(s)){console.error("Metadata does not contain variable:",s);continue}const i=a[s];if(typeof i!="object"||i===null){console.error("Parameters of variable:",s,"is either null or incorrect type. The value",i,"is either null or not an object.");continue}for(const r in i){const n=i[r];this.updateVariable(s,r,n),r==="name"&&(s=n)}}}else if(t==="author"){if(typeof a!="object"||a===null){console.error("Author object is not correct type");return}for(const s in a){const i=a[s];"name"in i||(i.name=s),this.setAuthor(i)}}else this.setMetadataField(t,a)}getPluginInfo(e,t){return c(this,null,function*(){if(this.cache[e]||(this.cache[e]={}),t in this.cache[e])return this.cache[e][t];const a=`https://unpkg.com/@jspsych/plugin-${e}/src/index.ts`;try{const s=yield(yield fetch(a)).text(),i=b(s,t);return this.cache[e]||(this.cache[e]={}),this.cache[e][t]=i,i}catch(s){return console.error(`Failed to fetch info from ${a}:`,s),this.cache[e]||(this.cache[e]={}),this.cache[e][t]=null,null}})}}function b(l,e){const t=l.match(/parameters:\s*{([\s\S]*?)};\s*/).join(),a=new RegExp(`((.|
)*)(?=${e}:)`),s=t.match(a)[0];return s.slice(s.lastIndexOf("/**")).match(new RegExp("(?<=\\*\\*)([\\s\\S]*?)(?=\\*\\/)"))[1].replace(/(\r\n|\n|\r)/gm,"").replace(/\*/gm,"").trim()}return p}();
//# sourceMappingURL=index.browser.min.js.map
